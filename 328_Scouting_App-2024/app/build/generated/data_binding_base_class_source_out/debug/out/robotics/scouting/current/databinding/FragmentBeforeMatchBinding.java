// Generated by view binder compiler. Do not edit!
package robotics.scouting.current.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.flexbox.FlexboxLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import robotics.scouting.current.R;

public final class FragmentBeforeMatchBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CheckBox blueColorCheck;

  @NonNull
  public final EditText editTextNumber;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final FlexboxLayout layout2Horizontal;

  @NonNull
  public final EditText matchID;

  @NonNull
  public final Button oldMatchButton;

  @NonNull
  public final CheckBox redColorCheck;

  @NonNull
  public final TextView scoutIDText;

  @NonNull
  public final TextView teamColorIDText;

  @NonNull
  public final EditText teamID;

  private FragmentBeforeMatchBinding(@NonNull FrameLayout rootView,
      @NonNull CheckBox blueColorCheck, @NonNull EditText editTextNumber,
      @NonNull FrameLayout frameLayout, @NonNull FlexboxLayout layout2Horizontal,
      @NonNull EditText matchID, @NonNull Button oldMatchButton, @NonNull CheckBox redColorCheck,
      @NonNull TextView scoutIDText, @NonNull TextView teamColorIDText, @NonNull EditText teamID) {
    this.rootView = rootView;
    this.blueColorCheck = blueColorCheck;
    this.editTextNumber = editTextNumber;
    this.frameLayout = frameLayout;
    this.layout2Horizontal = layout2Horizontal;
    this.matchID = matchID;
    this.oldMatchButton = oldMatchButton;
    this.redColorCheck = redColorCheck;
    this.scoutIDText = scoutIDText;
    this.teamColorIDText = teamColorIDText;
    this.teamID = teamID;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBeforeMatchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBeforeMatchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_before_match, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBeforeMatchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blueColorCheck;
      CheckBox blueColorCheck = ViewBindings.findChildViewById(rootView, id);
      if (blueColorCheck == null) {
        break missingId;
      }

      id = R.id.editTextNumber;
      EditText editTextNumber = ViewBindings.findChildViewById(rootView, id);
      if (editTextNumber == null) {
        break missingId;
      }

      FrameLayout frameLayout = (FrameLayout) rootView;

      id = R.id.layout2Horizontal;
      FlexboxLayout layout2Horizontal = ViewBindings.findChildViewById(rootView, id);
      if (layout2Horizontal == null) {
        break missingId;
      }

      id = R.id.matchID;
      EditText matchID = ViewBindings.findChildViewById(rootView, id);
      if (matchID == null) {
        break missingId;
      }

      id = R.id.oldMatchButton;
      Button oldMatchButton = ViewBindings.findChildViewById(rootView, id);
      if (oldMatchButton == null) {
        break missingId;
      }

      id = R.id.redColorCheck;
      CheckBox redColorCheck = ViewBindings.findChildViewById(rootView, id);
      if (redColorCheck == null) {
        break missingId;
      }

      id = R.id.scoutIDText;
      TextView scoutIDText = ViewBindings.findChildViewById(rootView, id);
      if (scoutIDText == null) {
        break missingId;
      }

      id = R.id.teamColorIDText;
      TextView teamColorIDText = ViewBindings.findChildViewById(rootView, id);
      if (teamColorIDText == null) {
        break missingId;
      }

      id = R.id.teamID;
      EditText teamID = ViewBindings.findChildViewById(rootView, id);
      if (teamID == null) {
        break missingId;
      }

      return new FragmentBeforeMatchBinding((FrameLayout) rootView, blueColorCheck, editTextNumber,
          frameLayout, layout2Horizontal, matchID, oldMatchButton, redColorCheck, scoutIDText,
          teamColorIDText, teamID);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
