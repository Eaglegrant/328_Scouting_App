// Generated by view binder compiler. Do not edit!
package robotics.scouting.current.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import robotics.scouting.current.R;

public final class ActivityGridBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final Toolbar mainToolbar;

  @NonNull
  public final TextView nofilesTextview;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final HorizontalScrollView scrollViewHorizontal;

  @NonNull
  public final AppBarLayout topLayout;

  private ActivityGridBinding(@NonNull ConstraintLayout rootView,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull FloatingActionButton fab,
      @NonNull Toolbar mainToolbar, @NonNull TextView nofilesTextview,
      @NonNull RecyclerView recyclerView, @NonNull HorizontalScrollView scrollViewHorizontal,
      @NonNull AppBarLayout topLayout) {
    this.rootView = rootView;
    this.coordinatorLayout = coordinatorLayout;
    this.fab = fab;
    this.mainToolbar = mainToolbar;
    this.nofilesTextview = nofilesTextview;
    this.recyclerView = recyclerView;
    this.scrollViewHorizontal = scrollViewHorizontal;
    this.topLayout = topLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGridBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGridBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_grid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGridBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coordinatorLayout;
      CoordinatorLayout coordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.main_toolbar;
      Toolbar mainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.nofiles_textview;
      TextView nofilesTextview = ViewBindings.findChildViewById(rootView, id);
      if (nofilesTextview == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.scrollViewHorizontal;
      HorizontalScrollView scrollViewHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewHorizontal == null) {
        break missingId;
      }

      id = R.id.topLayout;
      AppBarLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      return new ActivityGridBinding((ConstraintLayout) rootView, coordinatorLayout, fab,
          mainToolbar, nofilesTextview, recyclerView, scrollViewHorizontal, topLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
